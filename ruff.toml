# General configuration
[tool.ruff]
# Path to lint
target = ["app", "tests"]
# Disable output of useless warning messages
disable-noqa = true

# Configuring logging level
log_level = "INFO"

# Performance optimizations (skip certain directories)
skip = ["migrations", "build", "dist"]

# Enable type checking with mypy
# mypy is integrated with ruff but can be disabled if needed
[mypy]
enabled = true
# Define type checking exclusions (to improve performance)
exclude = "tests|migrations"

# Format the output to help identify issues easily
[tool.ruff.output]
# Makes ruff output easier to parse
format = "text"

# Customize verbosity of messages
verbosity = 2

# Max line length for Python files, a common best practice
line-length = 99

# Configure rules for specific linting
[tool.ruff.rules]
# Enable specific rule categories or configurations
select = ["E", "F", "W", "B", "C"]
ignore = ["E501", "F401"]

# General rules configuration
[tool.ruff.rules.E]
# Error codes in the E category correspond to syntax and indentation errors
max-line-length = 99

[tool.ruff.rules.F]
# These are related to flake8-like checks
# Remove unused imports, etc.
select = ["F401", "F403"]
ignore = ["F841"]

[tool.ruff.rules.W]
# Warnings related to PEP 8 compliance
# These can be relaxed for readability in larger files
max-line-length = 99

# Best practices configuration
[tool.ruff.rules.B]
# Best practices to follow in Python code (e.g., banning bad practices, excessive complexity)
complexity = 10

[tool.ruff.rules.C]
# Complexity-related configuration like cyclomatic complexity
max-complexity = 10

# Custom configuration for testing
[tool.ruff.rules.T]
# Configure testing-related linting, like coverage and tests
# You can choose to include additional testing configurations
enabled = true

# Configure the handling of docstrings for best practices
[tool.ruff.rules.D]
# Ensure proper docstring usage
docstring-style = "google"

# Configure behavior for unused imports or variables
[tool.ruff.rules.U]
# These can be customized for handling unused imports
check-unused-variables = true

# Add rules to enforce PEP 257 docstring conventions
[tool.ruff.rules.P]
# Enforce docstrings to follow PEP 257 conventions
docstrings = true

# Define exclusions for specific files or directories
[tool.ruff.exclude]
# Exclude certain files or directories from checks
paths = ["*/migrations/*", "*/tests/*", "*/build/*", "*/dist/*"]

# Linting rules for specific file extensions
[tool.ruff.ext]
# Include specific files with extensions such as .py and .txt
files = ["**/*.py"]

# Additional configuration for other tools like Black or isort (if required)
[tool.black]
# Max line length (ensure this matches with ruff's line-length)
line-length = 99

[tool.isort]
profile = "black"
line-length = 99
known_third_party = ["flask", "requests"]

# Additional tuning for performance and behavior
[tool.ruff.performance]
# Maximum allowed time for a rule to execute before moving to the next rule
rule-timeout = 10  # In seconds
